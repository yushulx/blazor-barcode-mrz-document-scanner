@page "/mrzreader"
@inject IJSRuntime JSRuntime

@if (isLoading)
{
    <div id="loading-indicator" class="loading-indicator">
        <div class="spinner"></div>
    </div>
}

<button @onclick="ReadMrz">Select an image</button>

<div id="imageview">
    <img id="@imageId" />
    <canvas id="@overlayId"></canvas>

</div>

<div>
    <textarea @bind="result"></textarea>
</div>

@code {
    private Boolean isLoading = true;
    private string result = string.Empty;
    private DotNetObjectReference<MrzReader>? objRef;
    private String imageId = "image";
    private String overlayId = "overlay";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            objRef = DotNetObjectReference.Create(this);
            await JSRuntime.InvokeVoidAsync("jsFunctions.initMrzReader", objRef);
            isLoading = false;
            StateHasChanged();
        }
    }


    public async Task ReadMrz()
    {
        await JSRuntime.InvokeVoidAsync(
        "jsFunctions.selectFile", objRef, overlayId, imageId, VisionTypes.MRZ);
    }

    [JSInvokable]
    public void ReturnMrzResultsAsync(string results)
    {
        result = results;
        StateHasChanged();
    }

    public void Dispose()
    {
        objRef?.Dispose();
    }
}

